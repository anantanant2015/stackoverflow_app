name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  install_dependencies:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Set up Elixir
        uses: erlef/setup-elixir@v2
        with:
          otp-version: '24.0'
          elixir-version: '1.14.0'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Phoenix dependencies
        run: |
          mix deps.get
          npm install --prefix ./frontend

      - name: Install NPM dependencies (React)
        run: npm install --prefix ./frontend

  run_backend_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Run backend tests
        run: mix test

  run_frontend_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Run frontend tests
        run: npm run test --prefix ./frontend

  build:
    runs-on: ubuntu-latest
    needs: [run_backend_tests, run_frontend_tests]
    steps:
      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.prod.yml build

  notify_success:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Notify Build Success
        run: echo "CI Build and Tests succeeded!"

  notify_failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      - name: Notify Build Failure
        run: echo "CI Build or Tests failed."
