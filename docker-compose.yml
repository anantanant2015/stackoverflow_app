services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5


  backend:
    build:
      context: ./stackoverflow_be
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./stackoverflow_be:/app
      - deps:/app/deps
      - build:/app/_build
    env_file:
      - .env
    environment:
      MIX_ENV: dev
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      LLM_API_URL: ${LLM_API_URL}
      SSL_KEY_PATH: ${SSL_KEY_PATH}
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
      MAILGUN_DOMAIN: ${MAILGUN_DOMAIN}
      PHX_SERVER: ${PHX_SERVER}
      PHX_HOST: ${PHX_HOST}
      PORT: ${PORT}
    depends_on:
      llm:
        condition: service_healthy
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./stackoverflow_fe
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./stackoverflow_fe:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
      - REACT_APP_SITE=${REACT_APP_SITE}
      - REACT_APP_CACHE_EXPIRATION=${REACT_APP_CACHE_EXPIRATION}
      - REACT_APP_STACKEXCHANGE_KEY=${REACT_APP_STACKEXCHANGE_KEY}
      - REACT_APP_STACK_APP_KEY=${REACT_APP_STACK_APP_KEY}

  llm:
    image: ollama/ollama
    container_name: local_llm
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    command: >
      sh -c "
        /bin/ollama serve &
        sleep 2 &&
        ollama pull ${LLM_MODEL:-tinyllama} &&
        tail -f /dev/null"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  ollama_models:
  deps:
  build:
