services:
  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_net
    ports:
      - "5433:5432"

  backend:
    build:
      context: ./stackoverflow_be
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      MIX_ENV: ${MIX_ENV}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    volumes:
      - ./stackoverflow_be:/app
      - deps:/app/deps
      - _build:/app/_build
      - node_modules_be:/app/assets/node_modules
    command: sh -c "mix ecto.setup || true && mix phx.server"
    depends_on:
      - db
    ports:
      - "4000:4000"
    networks:
      - app_net

  frontend:
    build:
      context: ./stackoverflow_fe
      dockerfile: Dockerfile.dev
      restart: always
    volumes:
      - ./stackoverflow_fe:/app
      - node_modules_fe:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_HOST=${REACT_HOST}
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_SITE=${REACT_APP_SITE}
      - REACT_APP_CACHE_EXPIRATION=${REACT_APP_CACHE_EXPIRATION}
      - REACT_APP_STACK_APP_KEY=${REACT_APP_STACK_APP_KEY}
    networks:
      - app_net
    depends_on:
      - backend

  llm:
    build:
      context: ./llm
      dockerfile: Dockerfile.ollama
    container_name: local_llm
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    environment:
      - OLLAMA_HOST=${OLLAMA_HOST}
    networks:
      - app_net
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:11434 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  deps:
  _build:
  node_modules_be:
  node_modules_fe:
  ollama_models:


networks:
  app_net:
